Занятие 14

Тема: Разработка консольного приложения

План-конспект

Цель урока:
1.	Выдать техническое задание с требованиями для разработки консольного приложения

План урока:
1.	Техническое задание

Конспект:

Техническое задание

Разработать консольное приложение, используя принципы ООП. 
Можно использовать темы, указанные ниже, или придумать свою:
1.	Разработка информационной системы учета товаров в аптеке;
2.	Система учета продаж компьютерной техники;
3.	Разработка автоматизированной системы работы кинотеатра;
4.	Система учета пациентов в поликлинике;
5.	Разработка автоматизированной системы службы доставки еды;
6.	Система учета поступлений в библиотеку;
7.	Автоматизированная система фирмы по предоставлению туристических услуг;
8.	Автоматизированная система учета продаж автомобилей в автосалоне;
9.	Система расчета заработной платы;
10.	Система управления персоналом на IT-предприятии;
11.	Программная поддержка расчета себестоимости продукции;
12.	Подсистема учета и ведения семейного бюджета;
13.	Разработка системы автоматизации работы парикмахерской;
14.	Разработка системы автоматизации работы косметического салона;
15.	Автоматизированная система тестирования по различным темам (по языку Ruby);
16.	Автоматизированная система судейства по различным видам спорта;
17.	Система тестирования профессиональных навыков специалистов;
18.	Разработка программы по учёту заключения контрактов фирмы;
19.	Автоматизированная система по учёту деятельности гостиничного бизнеса ;
20.	Разработка автоматизированной системы по учету деятельности почтового отделения.

Общие требования:			
					
Целью проекта является разработка объектной модели и ее программная реализация на языке Ruby. При разработке объектной модели требуется определить ее составные части и установить связи между ними. Разработать диаграмму классов.
Разработанный проект должен быть представлен в виде консольного приложения. В рамках работы над проектом должно быть обязательно реализовано:					
1) Разработка пользовательского меню, включающего следующие опции:
●	­ разделение ролей, авторизация пользователя, хранение пароля в зашифрованном виде; ­ просмотр необходимой информации;
●	­ добавление, редактирование и удаление записей;
●	­ поиск, сортировка и фильтрация записей;
●	­ вывод отчета;
●	­ другие опции в зависимости от специфики задачи.
2) Исходная и итоговая информация должна храниться в текстовых  файлах.
3) Предусмотреть использование в программе следующих аспектов:
●	­ реализация базовых принципов объектно-ориентированного программирования (абстракции, инкапсуляции, наследования и полиморфизма);
●	­ использование пространств имен (модулей);
●	­ реализация обработки ошибок программы.
4) По максимуму использовать возможности языка Ruby, изученные за предыдущие темы. 

